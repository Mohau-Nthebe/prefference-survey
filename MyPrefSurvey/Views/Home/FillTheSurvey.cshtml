@model MyPrefSurvey.Models.SurveyModel

@{
    ViewBag.Title = "FillTheSurvey";
}

<h2>Fill out Survey</h2>


@using (Html.BeginForm()) 
{
    @Html.AntiForgeryToken()
    
<div class="form-horizontal">
    <h4>Survey</h4>
    <hr />
    @Html.ValidationSummary(true, "", new { @class = "text-danger" })

    <h4>Personal Details</h4>
    <div class="form-group">
        @Html.LabelFor(model => model.Surname, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.EditorFor(model => model.Surname, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.Surname, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.FirstNames, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.EditorFor(model => model.FirstNames, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.FirstNames, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.Contact, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.EditorFor(model => model.Contact, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.Contact, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.Date, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.EditorFor(model => model.Date, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.Date, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.Age, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.EditorFor(model => model.Age, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.Age, "", new { @class = "text-danger" })
        </div>
    </div>
    <h4>What is your favourite food (You can choose more than one)</h4>
    <div class="form-group">
        @Html.LabelFor(model => model.Pizza, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            <div class="checkbox">
                @Html.EditorFor(model => model.Pizza)
                @Html.ValidationMessageFor(model => model.Pizza, "", new { @class = "text-danger" })
            </div>
        </div>
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.Pasta, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            <div class="checkbox">
                @Html.EditorFor(model => model.Pasta)
                @Html.ValidationMessageFor(model => model.Pasta, "", new { @class = "text-danger" })
            </div>
        </div>
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.PapWors, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            <div class="checkbox">
                @Html.EditorFor(model => model.PapWors)
                @Html.ValidationMessageFor(model => model.PapWors, "", new { @class = "text-danger" })
            </div>
        </div>
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.ChickenStir, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            <div class="checkbox">
                @Html.EditorFor(model => model.ChickenStir)
                @Html.ValidationMessageFor(model => model.ChickenStir, "", new { @class = "text-danger" })
            </div>
        </div>
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.BeefStir, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            <div class="checkbox">
                @Html.EditorFor(model => model.BeefStir)
                @Html.ValidationMessageFor(model => model.BeefStir, "", new { @class = "text-danger" })
            </div>
        </div>
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.Other, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            <div class="checkbox">
                @Html.EditorFor(model => model.Other)
                @Html.ValidationMessageFor(model => model.Other, "", new { @class = "text-danger" })
            </div>
        </div>
    </div>

    <h4> Use the dropdown to indicate how you feel about the following (from strongly agree to strongly disagree)</h4>
    <div class="form-group">
        @Html.LabelFor(model => model.EatOut, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">

            @Html.DropDownListFor(model => model.EatOut, new List<SelectListItem> { new SelectListItem { Text = "<-Select ->", Value = "0" }, new SelectListItem { Text = "Strongly Agree", Value = "1" }, new SelectListItem { Text = "Agree", Value = "2" }, new SelectListItem { Text = "Neutral", Value = "3" }, new SelectListItem { Text = "Disagree", Value = "4" }, new SelectListItem { Text = "Strongly disagree", Value = "5" } }, new { @class = "form-control" })
            @Html.ValidationMessageFor(model => model.EatOut, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.WatchMovies, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.DropDownListFor(model => model.WatchMovies, new List<SelectListItem> { new SelectListItem { Text = "<-Select ->", Value = "0" }, new SelectListItem { Text = "Strongly Agree", Value = "1" }, new SelectListItem { Text = "Agree", Value = "2" }, new SelectListItem { Text = "Neutral", Value = "3" }, new SelectListItem { Text = "Disagree", Value = "4" }, new SelectListItem { Text = "Strongly disagree", Value = "5" } }, new { @class = "form-control" })
            @Html.ValidationMessageFor(model => model.WatchMovies, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.WatchTV, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.DropDownListFor(model => model.WatchTV, new List<SelectListItem> { new SelectListItem { Text = "<-Select ->", Value = "0" }, new SelectListItem { Text = "Strongly Agree", Value = "1" }, new SelectListItem { Text = "Agree", Value = "2" }, new SelectListItem { Text = "Neutral", Value = "3" }, new SelectListItem { Text = "Disagree", Value = "4" }, new SelectListItem { Text = "Strongly disagree", Value = "5" } }, new { @class = "form-control" })
            @Html.ValidationMessageFor(model => model.WatchTV, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.Radio, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.DropDownListFor(model => model.Radio, new List<SelectListItem> { new SelectListItem { Text = "<-Select ->", Value = "0" }, new SelectListItem { Text = "Strongly Agree", Value = "1" }, new SelectListItem { Text = "Agree", Value = "2" }, new SelectListItem { Text = "Neutral", Value = "3" }, new SelectListItem { Text = "Disagree", Value = "4" }, new SelectListItem { Text = "Strongly disagree", Value = "5" } }, new { @class = "form-control" })
            @Html.ValidationMessageFor(model => model.Radio, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        <div class="col-md-offset-2 col-md-10">
            <input type="submit" value="Submit" class="btn btn-default" />
        </div>
    </div>
</div>
}

<div>
    @Html.ActionLink("Back to List", "Index")
</div>

@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
}
